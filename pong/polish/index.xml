<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Finishing Touches on Encompass Docs</title>
    <link>/pong/polish/</link>
    <description>Recent content in Finishing Touches on Encompass Docs</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language>
    <lastBuildDate>Sat, 08 Jun 2019 14:44:31 -0700</lastBuildDate>
    
	<atom:link href="/pong/polish/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Paddle Bounce</title>
      <link>/pong/polish/paddle_bounce/</link>
      <pubDate>Sat, 08 Jun 2019 14:46:08 -0700</pubDate>
      
      <guid>/pong/polish/paddle_bounce/</guid>
      <description>One thing that isn&amp;rsquo;t quite right in our game is that when the ball bounces, it reflects directly off the paddle.
If we look at the original Pong, we see that the angle of the ball is actually affected by the position where the ball hits the paddle. If the ball hits the edges of the paddle, it bounces off at a wider angle. If it hits the center of the paddle, it bounces horizontally.</description>
    </item>
    
    <item>
      <title>Title</title>
      <link>/pong/polish/title/</link>
      <pubDate>Sun, 09 Jun 2019 16:51:13 -0700</pubDate>
      
      <guid>/pong/polish/title/</guid>
      <description>It would be nice to have a title screen. Let&amp;rsquo;s make that happen.
I would like us to have a concept of game state. The title menu is a pretty distinct thing from the game itself so it feels nicer to have it be self contained instead of managing extra state in the game world.
Let&amp;rsquo;s create a new class in game/state.ts:
export abstract class State { public abstract load(): void; public abstract update(dt: number): void; public abstract draw(): void; }  Remember, abstract means that the class cannot be used directly, but describes features that exist in inherited classes.</description>
    </item>
    
    <item>
      <title>Win Condition</title>
      <link>/pong/polish/win_condition/</link>
      <pubDate>Sun, 09 Jun 2019 19:10:15 -0700</pubDate>
      
      <guid>/pong/polish/win_condition/</guid>
      <description>There&amp;rsquo;s one critical element missing from our game. Right now, once the game starts, it keeps going until the player exits the program. We need a win condition, and to indicate when that win condition has been reached.
First let&amp;rsquo;s create two separate components - one that holds information about the victory, and one that counts down to when the game should return to the title screen.
import { Component } from &amp;quot;encompass-ecs&amp;quot;; export class WinDisplayComponent extends Component { public player_index: number; }  import { Component } from &amp;quot;encompass-ecs&amp;quot;; export class FinishGameTimerComponent extends Component { public time_remaining: number; }  Now we&amp;rsquo;ll create an engine that checks the game score and emits a message if one player has reached that score.</description>
    </item>
    
  </channel>
</rss>